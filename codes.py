# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mdFZEXAWhtopsHTlHgpXHXt2NJc9XxjC
"""



print(11)

num1='100'
num2='200'
print(num1+num2)

i = int(input('enter any no.'))
g = i%2
if(g==0):
  print ("it is even")



i = input('enter any alphabet')

if(i=="a" or i == "e" or i=="i" or i == "o" or i=="u"):
  print ("it is vowel")
else:
  print ("it is consonant")

color="green"
if color=="red":
  print("it is a tomato")
elif color=="purple":

number_list = [1,2,3,4,5,6,7,8,9,10]
n = int (input("enter any no."))
if number_list[n]%2 == 0 :
  print("e")
else:
    print("o")

def print_name():
  print('Dhruv')

print_name()

def print_name(name):
  print(name)

print_name("divyansh")

def number( n):
  if n % 2 == 0 :
    print("even")

number(20)

def number( n,i):
  g = n[i]
  if g % 2 == 0 :
    print("even")
  else :
    print('odd ')
arr = [1,2,3,4,5,6,7,8,9,10]
inpt = int(input("enter any nuber but less than 10\n"))
number (arr,inpt)

email = input("enter any valid email")
if '@' in email and email.endswith('.com'):
   print ("valid email")

list=[1,4,66,3,3,66,7,2]
#Indexing in list
list[0] #first value of the list = 1
list[5]
print(list)

L=[5,99,4,5,6,9,18,25,36]
L[-5:]

list =[x for x in range (5)]
list

list =[x*x*x for x in range(5)]
list
# for cube only

list1 =[1,2,3,4]
list2 = [5,6,7,8]
list1.extend(list2)
print(list1)

def print_even_index_values(input_list):
  """
  This function prints the values at even indices in a list.

  Args:
    input_list: The list to process.
  """
  for i in range(len(input_list)):
    if i % 2 == 0:
      print(input_list[i])




# Example usage:
my_list = [10, 20, 30, 40, 50, 60]
print("Values at even indices:")
print_even_index_values(my_list)

x = int(input("enter any no"))
y = int(input("enter second no."))

a = lambda x,y: x*y
b = lambda x,y: x-y
c = lambda x,y: x/y
d = lambda x,y: x*x

print(a(x,y))
print(b(x,y))
print(c(x,y))
print(d(x,y))

#you need to write a fxn to print 1 to 50 without loop

list =[ x for x in range(51) if x % 2==0]
print(list)

list1 = ["dhruv","dev","divyansh"]
list2 = [100 , 200 , 300]
z = zip(list1,list2)
print(list(z))

# sort a list without using a sort function and print that sorted list
l1 = [12,1,34,5,6,8,3,0]

test2dc={}
test3dc={}
test4dc={}
test5dc={"test2":{"lalit":78,"purva":80},"test3":{"lallu YADAV":86}}
print(test5dc)

dc ={
    "name" : "Drv", "age" : 80 , "add" : {
        "city": "dholakpur","state":"chinese"
    }}
print(dc)

dc{}
dc

class BrickFrame:
  def __init__(self):
    pass
# name of object = Name of class()
brick = BrickFrame()
id(brick)    #139108153854864 hashcode of the object so it is

class soapFrame :
  def _init_(self):
    pass

  def printClass(self):
                 print('soapFrame')

dettol = soapFrame()
dettol.printClass()

class soapFrame :
  def _init_(self):
    print('object created')

  def printClass(self):
       print('soapFrame')

dettol = soapFrame()
#dettol.printClass()

class Dog:
  def__init__(self):
    name = Dogesh

  def nmeprint():

    print(name)


obj = Dog()
obj.namePrint()

def names(ids):
   print(ids)

 names(12)

class Name:
  name=''
  course=""
  def __init__(self,name,course):
     self.name = name
     self.course= course
  def namePrint(self):
     print(self.name)
     print(self.course)

na=Name('Dhruv','B.Tech')
na.namePrint()